<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team2.dao.MemberMapper">
	<resultMap type="com.team2.database.MemberInfoObject" id="MemberResultMap">
        <result property="userid" column="USERID"/>
        <result property="username" column="USERNAME"/>
        <result property="pw" column="PW"/>
        <result property="email" column="EMAIL"/>
    </resultMap>
 
    <!-- 모든 유저 받아옴 (예린)  -->
    <select id="getMembers" resultMap="MemberResultMap">
        SELECT * FROM user_info
    </select>

    <!-- 유저 추가 (연희)  -->
    <insert id="insertMember" parameterType="com.team2.database.MemberInfoObject" >
        INSERT INTO user_info VALUES(user_cnt_seq.nextval,#{username, jdbcType=VARCHAR},#{pw, jdbcType=VARCHAR},#{email, jdbcType=VARCHAR})
    </insert>
    <!-- sequence 추가 -->
    
    <!-- update와 delete는 생략한다. -->
    <update id="updateMember" parameterType="com.team2.database.MemberInfoObject" ></update>
    <delete id="deleteMember" parameterType="com.team2.database.MemberInfoObject" >
        DELETE user_info WHERE(username=#{username})
    </delete>
    
    <!-- 로그인 (예린)  -->
    <select id="loginMember" parameterType="hashmap" resultMap="MemberResultMap">
    	select * from user_info
		where email = #{email} and pw = #{pw}
    </select>
    
    <!-- 메일로 사용자 찾기 (연희)  -->
    <select id="searchMemberByEmail" parameterType="com.team2.database.MemberInfoObject" resultMap="MemberResultMap">
       SELECT * FROM user_info WHERE(email=#{email, jdbcType=VARCHAR})
    </select>
    
    
</mapper>